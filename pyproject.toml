#
# MIT License
#
# Copyright (c) 2024-2025 nbiotcloud
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

[project]
name = "python-template"
dynamic = ["version"]
description = "Unified Chip Design Platform - Address Map"
readme = "README.md"
authors = [
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "Private :: Do Not Upload",
]
requires-python = ">=3.10.0,<4.0"
dependencies = [
]

[project.urls]
"Homepage" = "https://github.com/nbiotcloud/ucdp-addr"
"Documentation" = "https://ucdp-addr.readthedocs.io/en/stable/"
"Bug Tracker" = "https://github.com/nbiotcloud/ucdp-addr/issues"

[dependency-groups]
dev = [
    "pre-commit>=4.1.0",
    "pytest>=8.3.5",
    "pytest-cookies>=0.7.0",
    "pytest-cov>=6.0.0",
    "ruff>=0.11.2",
    "test2ref>=0.4.2",
]

[tool.ruff]
line-length = 120
fix = true
target-version = "py310"

[tool.ruff.lint]
select = [
    # isort
    "I",
    # pyflakes
    "F",
    # pycodestyle
    "E", "W",
    # pydocstyle
    "D",
    # pep8-naming
    "N",
    # flake8-2020
    "YTT",
    # flake8-bugbear
    "B",
    # flake8-quotes
    "Q",
    # flake8-debugger
    "T10",
    # flake8-gettext
    "INT",
    # pylint
    "PL",
    # misc lints
    "PIE",
    # flake8-pyi
    "PYI",
    # tidy imports
    "TID",
    # implicit string concatenation
    "ISC",
    # type-checking imports
    "TC",
    # comprehensions
    "C",
    "C4",
    # pygrep-hooks
    "PGH",
    # Ruff-specific rules
    "RUF",
    # flake8-bandit: exec-builtin
    "S102",
    # numpy-legacy-random
    "NPY002",
    # Perflint
    "PERF",
    # flynt
    "FLY",
    # flake8-logging-format
    "G",
    # pyupgrade
    "UP",
    # annotation
    # "ANN"
    # bandit
    # "S",
    # Argument
    # "ARG",
    # Pathlib
    "PTH",
    # Simplify
    # "SIM",
    # Return
    "RET",
    # Raise
    "RSE",
]
ignore = [
    # too-many-arguments
    'PLR0913',
    # Ambiguous doc
    'D203', 'D212', 'D402', 'D406',
    # Multiline doc is ok.
    'D200',
    # We use the class for constructor doc
    'D107',
    # Magic Method Documentation is optional
    'D105',
    # We use faster isinstance checks
    'UP038',
    # Assert
    'S101',
    # Type-Checking
    'TC001',
]
[tool.ruff.lint.per-file-ignores]
"test_*" = [
    # Magic Values
    "PLR2004",
    # Argument
    "ARG001",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
addopts ="""
    --cov ucdp_addr
    --cov-report term
    --cov-report html
    --doctest-glob=docs/*
    --doctest-modules
    --ignore-glob={{cookiecutter.name}}/*
    --ignore-glob=tests/refdata/*
    --log-level=INFO
    --junitxml=report.xml
"""
filterwarnings = [
    "error",
]

[tool.coverage.report]
exclude_lines = [
    'return NotImplemented',
    'raise NotImplementedError()',
    'pragma: no cover',
    'assert False',
]
